---
title: "{{< fa database >}} ConnectomeDB2025: <span class='highlight'>Human LR Pairs</span>"
execute:
  echo: false
  warnings: false  # Add this line to suppress warnings globally
format:
  html:
    table: false
header-includes: |
  <script src="../js/keepDropdownMenuGold.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      // Check if the elements exist before changing text content
      const showAllButton = document.querySelector('.dtsp-showAll');
      const collapseAllButton = document.querySelector('.dtsp-collapseAll');
      const clearAllButton = document.querySelector('.dtsp-clearAll');
      const titleElement = document.querySelector('.dtsp-title');

      if (showAllButton) {
        showAllButton.textContent = "▼ Display All";
      }

      if (collapseAllButton) {
        collapseAllButton.textContent = "▲ Minimize All";
      }

      if (clearAllButton) {
        clearAllButton.textContent = "⌫ Reset Filters";
      }
    });
  </script>
---

***



```{python}
import sys
import os
import pandas as pd
from itables import init_notebook_mode, show
from IPython.display import display, Javascript
import itables.options as opt
# Change working directory to ConnectomeDB
project_root = os.path.dirname(os.getcwd())
os.chdir(project_root)
sys.path.append(os.path.abspath("src"))
from createDataTable import gene_pair

human_gene_pair = gene_pair.iloc[:, :-28]

# Function to update and display the table
def update_table():
    show(
        human_gene_pair,
        keys=True,
        layout={"top": ["searchPanes"],
                },
        searchPanes={"layout": "rows-1", 
                     "cascadePanes": True, 
                     "columns": [1,2,3,8,9,10,11,12], 
                     "regex": True, "caseInsensitive": False, 
                     "smart": True, 
                     "initCollapsed": True, 
                     "controls": True},
        #layout={"bottom": "searchBuilder", "title": "Advanced Search"},
        fixedColumns={"start": 1, "end": 0},
        fixedHeader=True,  # Keep header fixed for alignment
        column_filters="footer", 
        scrollX=True,
        classes="display nowrap cell-border compact",
        select=True,
        selected_rows=[],
        responsive=True,  # Enable responsive behavior
        theme='grid',
        search={"regex": True, "caseInsensitive": False, "smart": True},
        lengthMenu=[ [10, 20, 50, 100, -1], ["10", "20", "50", "100", "All"] ],
        buttons=[
            "pageLength",  
            {"extend": "colvis", "text": "Display Columns"},
            {"extend": "csvHtml5", "title": "Source"},
            {"extend": "excelHtml5", "title": "Source"},
            {"extend": "copyHtml5", "title": "Source"},
        ],
        columnDefs=[
            {"className": "dt-center", "targets": [4]}, 
            # {"width": "100px", "targets": "_all"},
            {"targets": list(range(-1, -17, -1)), "visible": False} # Hide last 12 columns by default
        ],
        style="1200px;margin:auto",
           language={
            "search": "Search Any Column:",
            "searchPlaceholder": "e.g. CD24",
            "searchPanesPlaceholder": "",
           # "searchBuilder": {
           #     "title": "Advanced Search <i>Multiple filtering, AND/OR condition</i>" 
           # }
        }, 
        autoWidth=True,
        maxBytes=0,  # So it does not downsample
        initCode='''
            $(document).on('draw.dt', function () {
                $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
            });
        ''',
    )
      
      

# Call the function to render the table
update_table()
```

{{< include hint.qmd >}}
