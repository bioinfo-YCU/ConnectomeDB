---
title: ""
---

```{python}
#| echo: false
#| output: asis

import os
import json
from pathlib import Path
from datetime import datetime
import humanize

def load_config():
    """Load repository configuration"""
    config_file = Path("JSON/config.json")
    if config_file.exists():
        with open(config_file, 'r') as f:
            return json.load(f)
    return {
        "title": "Connectomedb Data Repository",
        "description": "Browse and download Ligand-receptor database tables across 14 most studied species.",
        "license": "MIT License",
        "contact":  "mailto:&#104;&#101;&#108;&#112;&#64;&#99;&#111;&#110;&#110;&#101;&#99;&#116;&#111;&#109;&#101;&#100;&#98;&#46;&#111;&#114;&#103;,&#97;&#108;&#105;&#115;&#116;&#97;&#105;&#114;&#46;&#102;&#111;&#114;&#114;&#101;&#115;&#116;&#64;&#112;&#101;&#114;&#107;&#105;&#110;&#115;&#46;&#117;&#119;&#97;&#46;&#101;&#100;&#117;&#46;&#97;&#117;",
        "citation": "Please cite: [ConnectomeDB2025, a high quality manually curated ligand-receptor database for cell-to-cell communication prediction](), P Liu, S Maezono et al. *Journal Title* **XX (YY)**, ZZZ (2025). DOI: 10.xxxx/xxxxx"
    }

def is_visible(p):
    """Check if a path is visible (not hidden). Only checks the immediate filename/dirname."""
    return not p.name.startswith('.')

def get_directory_info(base_path="downloads"):
    """Get information about directories and files, excluding hidden ones."""
    base = Path(base_path)
    if not base.exists():
        base.mkdir(parents=True, exist_ok=True)
    directories = []
    
    for item in sorted(base.iterdir()):
        if item.is_dir() and is_visible(item):
            # Collect visible files recursively
            all_visible_files = []
            direct_files = []
            
            for subitem in item.rglob("*"):
                if subitem.is_file() and is_visible(subitem):
                    all_visible_files.append(subitem)
                    # Check if it's a direct child file
                    if subitem.parent == item:
                        direct_files.append(subitem)
            
            file_count = len(all_visible_files)  # Total files including subdirectories
            total_size = sum(f.stat().st_size for f in all_visible_files)
            last_modified = max((f.stat().st_mtime for f in all_visible_files), default=0)
            
            directories.append({
                "name": item.name,
                "file_count": file_count,
                "direct_file_count": len(direct_files),  # Available for debugging if needed
                "size": humanize.naturalsize(total_size),
                "last_modified": datetime.fromtimestamp(last_modified).strftime("%Y-%m-%d") if last_modified else "Unknown",
                "description": get_directory_description(item.name)
            })
    return directories

def get_directory_description(dir_name):
    """Get description for common directory types"""
    descriptions = {
        "current-release": "The most recent and up-to-date version of the database tables",
        "previous-release": "The previous version of the database tables",
        "archive": "Historical versions and deprecated database tables",
        "published-datasets": "Datasets corresponding to published research articles",
        "supplementary": "Additional datasets and supplementary materials",
        "tools": "Software tools and utilities for data processing",
        "documentation": "User guides, manuals, and technical documentation",
        "latest": "Always-current files with stable names for automated downloading"
    }
    return descriptions.get(dir_name.lower(), "date-versioning of the database tables")

# Load configuration and directory info
config = load_config()
directories = get_directory_info()

# Print the top-level Markdown content
print(f"""
## {config['title']}


Use the file navigator below to download three database tables. All data are freely available under the MIT License and are provided AS IS, without any warranty. If you have any questions, please feel free to [contact us]({config['contact']}).

---

### Available Datasets
""")

# Create DataFrame for table display
import pandas as pd

df = pd.DataFrame(directories)

# Rename columns for display
df.rename(columns={
    'name': 'Directory', 
    'file_count': 'Files', 
    'size': 'Size', 
    'last_modified': 'Last Modified', 
    'description': 'Description'
}, inplace=True)

# Generate Markdown links for the directories
df['Directory'] = df.apply(lambda row: f"[{row['Directory']}](browse.html?dir={row['Directory']})", axis=1)

print(df.to_markdown(index=False))

print("""
---

### Dataset Categories

The following directories contain datasets and tools available for download:

- **Current Release**: The most recent and up-to-date version of the Ligand-Receptor(LR) database tables
- **Previous Release**: The previous version of the LR database tables

Each dataset is available in CSV, XLSX, and JSON formats.
""")

print(f"""{config['citation']}""")
```